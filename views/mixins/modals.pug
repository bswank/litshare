mixin newCommunityModal()
  .modal-wrapper#createCommunityModal
    .modal-container
      .modal
        .modal-header
          h2 Create a Community
        .modal-body.community-form
          p Be specific and unique. Remember, LitShare Communities are based on real-life communities.
          hr
          form(action=`/communities/new` method="POST")
            label(for="Name") Name
            input(type="text" name="name" autocomplete="off" placeholder="Community Name")
            p.helper
              small Choose a unique, descriptive name.
            label(for="Description") Description
            textarea(name="description" rows="5" placeholder="Community Description")
            p.helper
              small Describe the specific local context or community.
            label(for="Location") Location
            input(type="text" id="address" name="location[address]" placeholder="City, State, Province, or Region")
            p.helper
              small Specify the community's general location.
            input.hidden(type="text" id="lng" name="location[coordinates][0]" hidden)
            input.hidden(type="text" id="lat" name="location[coordinates][1]" hidden)
            label(for="Admission") Admission
            select(name="private")
              option(value="false") Public (Anyone may request to join)
              option(value="true") Private (Invitation only)
            p.helper
              small Choose a way users will join.
            button.submit(type="submit") Create Community
            button.ind.ml.cancel(type="button") Cancel
            
mixin editCommunityModal()
  .modal-wrapper#editCommunityModal
    .modal-container
      .modal
        .modal-header
          h2 Edit #{community.name}
        .modal-body.community-form
          form(action=`/communities/${community._id}/edit` method="POST")
            label(for="Name") Name
            input(type="text" name="name" value=(community && community.name) autocomplete="off" placeholder="Community Name")
            p.helper
              small Choose a unique, descriptive name.
            label(for="Description") Description
            textarea(name="description" rows="3" placeholder="Community Description")= community && community.description
            p.helper
              small Describe the specific local context or community.
            label(for="Location") Location
            input(type="text" id="address" name="location[address]" placeholder="City, State, Province, or Region" value=(community && community.location.address))
            p.helper
              small Specify the community's general location.
            input.hidden(type="text" id="lng" name="location[coordinates][0]" value=(community && community.location.coordinates[0]) hidden)
            input.hidden(type="text" id="lat" name="location[coordinates][1]" value=(community && community.location.coordinates[1]) hidden)
            label(for="Admission") Admission
            select(name="private")
              if community && community.private == true
                option(value="true") Private (Invitation only)
                option(value="false") Public (Anyone may request to join)
              else
                option(value="false") Public (Anyone may request to join)
                option(value="true") Private (Invitation only)
            p.helper
              small Choose a way users will join.
            button.submit(type="submit") Save Changes
            button.ind.ml.cancel(type="button") Cancel
            
mixin deleteCommunityModal()            
  .modal-wrapper#deleteCommunityModal
    .modal-container
      .modal
        .modal-header
          h2 Please Conifrm
        .modal-body
          p This action cannot be undone. Seriously.
          hr
          form(action=`/communities/${community._id}/delete` method="POST")
            button.neg.nm(type="submit") Delete Community
            button.ind.cancel.nm.ml(type="button") Cancel
            
mixin leaveCommunityModal()            
  .modal-wrapper#leaveCommunityModal
    .modal-container
      .modal
        .modal-header
          h2 Please Confirm
        .modal-body
          p Do you really want to leave #{community.name}? You can be a part of as many communities as you like for free.
          hr
          form(action=`/communities/${community._id}/leave` method="POST")
            button(type="submit") Leave Community
            button.ind.cancel.ml(type="button") Cancel
            
mixin editProfileModal()
  .modal-wrapper#editProfileModal
    .modal-container
      .modal
        .modal-header
          h2 Edit Profile
        .modal-body
          form(action="/account" method="POST")
            label(for="name") Name
            input(type="text" name="name" value=(user && user.name))
            label(for="email") Email Address
            input(type="email" name="email" value=(user && user.email))
            label(for="Bio") Bio
            textarea(name="bio" rows="4" placeholder="Tell us a little about yourself.")= user &&  user.bio
            label(for="location") Location
            input(type="text" id="address" name="location[address]" placeholder="City, State, Province, or Region" value=(user && user.location.address))
            input.hidden(type="text" id="lng" name="location[coordinates][0]" value=(user && user.location.coordinates[0]) hidden)
            input.hidden(type="text" id="lat" name="location[coordinates][1]" value=(user && user.location.coordinates[1]) hidden)
            button.submit(type="submit") Save Changes
            button.ind.cancel.ml(type="button") Cancel

mixin deleteAccountModal()
  .modal-wrapper#deleteAccountModal
    .modal-container
      .modal
        .modal-header
          h2 Please Conifrm
        .modal-body
          p This action cannot be undone. Seriously. You'll lose any books in your library and all profile data.
          hr
          form(action=`/account/delete` method="POST")
            button.neg(type="submit") Delete Account
            button.ind.cancel.ml(type="button") Cancel

mixin manageAccountModal()
  .modal-wrapper.manageAccountModal
    .modal-container
      .modal
        if user.stripeSubscription
          .modal-header
            h2 Update your Debit or Credit Card
          .modal-body
            p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
            hr
            form(action="/plan-management/update-card" method="POST" id="payment-form")
              label(for="card-element") New Debit or Credit Card
              #card-element
              #card-errors(role="alert")
              button(type="submit") Update Card
              button.ml.ind.cancel(type="button") Cancel
        else
          .modal-header
            h2 Upgrade to LitShare Pro
          .modal-body
            p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
            hr
            form(action="/plan-management/upgrade-account" method="POST" id="payment-form")
              label(for="card-element") Debit or Credit Card
              #card-element
              #card-errors(role="alert")
              button(type="submit") Subscribe Monthly
              button.ml.ind.cancel(type="button") Cancel
            
mixin downgradeAccountModal()
  .modal-wrapper#downgradeAccountModal
    .modal-container
      .modal
        .modal-header
          h2 Downgrade from LitShare Pro
        .modal-body
          p Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
          hr
          form(action="/plan-management/downgrade-account" method="POST" id="payment-form")
            button.neg(type="submit") Cancel Subscription
            button.ml.ind.cancel(type="button") Cancel
            
mixin forgotPasswordModal()
  .modal-wrapper#forgotPasswordModal
    .modal-container
      .modal
        .modal-header
          span.modal-close
          h2 Forgot your password, eh?
        .modal-body
          form(action="/account/forgot" method="POST")
            label(for="email") Email Address
            input(type="email" name="email")
            p.helper
              small We'll send an email with a link to reset it.
            button(type="submit") Reset Password
            button.ind.ml.cancel(type="button") Cancel
            
mixin newLibraryModal()
  .modal-wrapper#createLibraryModal
    .modal-container
      .modal
        .modal-header
          h2 Create a Library
        .modal-body.community-form
          form(action=`/libraries/new` method="POST")
            label(for="Name") Name
            input(type="text" name="name" autocomplete="off" placeholder="Library Name")
            p.helper
              small Only you will see this.
            label(for="Visibility") Community Visibility
            select(name="private")
              option(value="false") Public (These books are avaialable in my communities)
              option(value="true") Private (These books are not available in my communities)
            p.helper
              small Should other users see these books?
            button.submit(type="submit") Create Library
            button.ind.ml.cancel(type="button") Cancel
            
mixin addBookModal()
  .modal-wrapper#addBookModal
    .modal-container
      .modal
        .modal-header
          h2 Add a Book
        .modal-body.community-form
          form(action=`/books/add` method="POST")
            label(for="Title") Title
            input(type="text" name="title" autocomplete="off" placeholder="Title")
            label(for="Subtitle") Subtitle
            input(type="text" name="subtitle" autocomplete="off" placeholder="Subtitle")
            label(for="Author") Author
            input(type="text" name="author" autocomplete="off" placeholder="Author")
            input(type="hidden" name="libraries" value=`${library._id}`)
            button.submit(type="submit") Add Book
            button.ind.ml.cancel(type="button") Cancel
